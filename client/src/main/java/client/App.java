/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package client;

import java.time.Duration;

import com.uber.cadence.WorkflowExecution;
import com.uber.cadence.client.WorkflowClient;
import com.uber.cadence.client.WorkflowClientOptions;
import com.uber.cadence.client.WorkflowOptions;
import com.uber.cadence.serviceclient.ClientOptions;
import com.uber.cadence.serviceclient.WorkflowServiceTChannel;

import workflow.common.ConnectionInfo;
import workflow.common.OrdersWorkflow;
import workflow.common.domain.Order;

public class App {
    public static void main(String[] args) {
        WorkflowServiceTChannel service = new WorkflowServiceTChannel(ClientOptions.newBuilder()
                .setHost(ConnectionInfo.HOST)
                .setPort(ConnectionInfo.PORT)
                .build());
        WorkflowClientOptions clientOptions = WorkflowClientOptions.newBuilder()
                .setDomain(ConnectionInfo.NAMESPACE).build();
        WorkflowClient workflowClient = WorkflowClient.newInstance(service, clientOptions);
        WorkflowOptions workflowOptions = new WorkflowOptions.Builder()
                .setTaskList(ConnectionInfo.TASK_QUEUE)
                .setExecutionStartToCloseTimeout(Duration.ofSeconds(60))
                .build();

        OrdersWorkflow ordersWorkflow = workflowClient.newWorkflowStub(OrdersWorkflow.class, workflowOptions);
        Order order = new Order("cf-12939x", "fake@email.com", "12 Smith Street");

        WorkflowExecution result = WorkflowClient.start(ordersWorkflow::processOrder, order);

        System.out.println(String.format("Started workflowId %s, RunId %s", result.getWorkflowId(), result.getRunId()));
    }
}