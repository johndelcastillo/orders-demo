/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package client;

import io.temporal.api.common.v1.WorkflowExecution;
import io.temporal.client.WorkflowClient;
import io.temporal.client.WorkflowClientOptions;
import io.temporal.client.WorkflowOptions;
import io.temporal.serviceclient.WorkflowServiceStubs;
import io.temporal.serviceclient.WorkflowServiceStubsOptions;
import workflow.common.ConnectionInfo;
import workflow.common.OrdersWorkflow;
import workflow.common.domain.Order;

public class App {
    public static void main(String[] args) {
        String targetString = String.format("%s:%d", ConnectionInfo.HOST, ConnectionInfo.PORT);
        WorkflowServiceStubsOptions serviceOptions = WorkflowServiceStubsOptions.newBuilder()
                .setTarget(targetString).build();

        WorkflowServiceStubs service = WorkflowServiceStubs.newServiceStubs(serviceOptions);

        WorkflowClientOptions clientOptions = WorkflowClientOptions.newBuilder()
                .setNamespace(ConnectionInfo.NAMESPACE).build();
        WorkflowClient workflowClient = WorkflowClient.newInstance(service, clientOptions);

        WorkflowOptions workflowOptions = WorkflowOptions.newBuilder()
                .setTaskQueue(ConnectionInfo.TASK_QUEUE)
                .build();

        OrdersWorkflow ordersWorkflow = workflowClient.newWorkflowStub(OrdersWorkflow.class, workflowOptions);
        Order order = new Order("cf-12939x", "fake@email.com", "12 Smith Street");

        WorkflowExecution result = WorkflowClient.start(ordersWorkflow::processOrder, order);

        System.out.println(String.format("Started workflowId %s, RunId %s", result.getWorkflowId(), result.getRunId()));
    }
}